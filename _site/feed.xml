<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>远方有多远,请你告诉我!</description>
    <link>http://www.idearfree.com/</link>
    <atom:link href="http://www.idearfree.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 06 Aug 2017 22:51:30 +0800</pubDate>
    <lastBuildDate>Sun, 06 Aug 2017 22:51:30 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>汇编语言知识基础!</title>
        <description>
&lt;ol&gt;
  &lt;li&gt;机器语言是机器指令的集合(通过把二进制数转为高低电平来运行)&lt;/li&gt;
  &lt;li&gt;CPU(Central Processing Unit)中央处理单元&lt;/li&gt;
  &lt;li&gt;汇编语言由三类指令组成
    &lt;ol&gt;
      &lt;li&gt;汇编指令:机器码的助记符&lt;/li&gt;
      &lt;li&gt;伪指令:由编译器执行,计算机不执行&lt;/li&gt;
      &lt;li&gt;其它符号: +, -, *, /,由编译器执行&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;8 bit = 1 Byte 即:8位 = 1 字节
    &lt;ol&gt;
      &lt;li&gt;1024Byte = 1KB, 1024KB = 1MB, 1024MB = 1GB, 1024GB = 1TB&lt;/li&gt;
      &lt;li&gt;存储器被分为多个存储单元,每个单元被分配一个编号(从零开始)&lt;/li&gt;
      &lt;li&gt;微型机的存储单元,一个存储单元可存放1Byte(字节) = 8bit(位)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU对数据进行读写(必须和芯片进行下面3类信息交互)
    &lt;ol&gt;
      &lt;li&gt;存储单元的地址(地址信息)&lt;/li&gt;
      &lt;li&gt;器件的选择,读或写的命令(控制信息)&lt;/li&gt;
      &lt;li&gt;读或写的数据(数据信息)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;CPU和其它芯片通过导线来传输信息(我们通常叫做总线)
    &lt;ol&gt;
      &lt;li&gt;总线从逻辑上分为3类:
        &lt;ol&gt;
          &lt;li&gt;地址总线&lt;/li&gt;
          &lt;li&gt;控制总线&lt;/li&gt;
          &lt;li&gt;数据总线&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;一根总线只能传送两种信息0/1(总线的根数我们叫做宽度)&lt;/li&gt;
      &lt;li&gt;地址总线的宽度(N)决定了CPU的寻址能力(2^N)&lt;/li&gt;
      &lt;li&gt;数据总线的宽度(N)决定了CPU与外界的数据传输速度
        &lt;ol&gt;
          &lt;li&gt;1根总线的传输能力为 1bit(1位) 8根为1字节&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;控制总线决定CPU对外部器件的控制不同器件的能力&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;小结
    &lt;ol&gt;
      &lt;li&gt;汇编指令是机器指令的助记符,同机器指令一一对应.&lt;/li&gt;
      &lt;li&gt;每一种CPU都有自己的汇编指令集.&lt;/li&gt;
      &lt;li&gt;CPU可以直接使用的信息在存储器中存放.&lt;/li&gt;
      &lt;li&gt;在存储器中指令和数据没有任何区别,都是二进制信息.&lt;/li&gt;
      &lt;li&gt;存储单元从零开始顺序存储8个bit, 即8位二进制数.&lt;/li&gt;
      &lt;li&gt;每一个CPU芯片都有许多管脚,这些管脚和总线相连.也可以说,
这些管脚引出总线.一个CPU可以引出3中总线的宽度标志了这个CPU的不同方面的性能.
        &lt;ol&gt;
          &lt;li&gt;地址总线决定CUP寻址能力&lt;/li&gt;
          &lt;li&gt;数据总线决定CPU与其它器件进行数据禅送是的一次数据禅送量;&lt;/li&gt;
          &lt;li&gt;控制总线决定CUP对系统中其他器件的控制能力&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;下面的需了解更多可自行Google
    &lt;ol&gt;
      &lt;li&gt;内存地址空间&lt;/li&gt;
      &lt;li&gt;比如CPU的地址总线宽度为10,那么寻址能力就为1024&lt;/li&gt;
      &lt;li&gt;这1024个可寻到的内存单元就构成了这个CPU的内存地址空间&lt;/li&gt;
      &lt;li&gt;超出寻址能力的内存就无法使用了&lt;/li&gt;
      &lt;li&gt;主板, CPU通过主板和总线来控制一系列扩展器件&lt;/li&gt;
      &lt;li&gt;接口卡:计算机系统中所有可用程序控制其工作的设备,必须收到CPU的控制.&lt;/li&gt;
      &lt;li&gt;各类存储芯片&lt;/li&gt;
      &lt;li&gt;随机存储器(RAM):用于存放供CPU使用的绝大部分程序和数据&lt;/li&gt;
      &lt;li&gt;BOIS(Basic Input/Output System)基本 输入/输出 系统.
        &lt;ol&gt;
          &lt;li&gt;BOIS是由主板和各类接口卡厂商提供的元件系统&lt;/li&gt;
          &lt;li&gt;可以通过它利用该硬件设备进行最基本的输入输出&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;接口卡上的RAM
        &lt;ol&gt;
          &lt;li&gt;某些接口卡需要对大批量输入输出数据进行暂时存储,
在其上装有RAM,最典型的就是显卡(显卡越大对外显示的内容就越多越快).&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PC机中各类存储器的逻辑连接
&lt;img src=&quot;/styles/images/PC.jpg&quot; alt=&quot;PC机中各类存储器的逻辑连接&quot; /&gt;
将各类存储其看作一个逻辑存储器
&lt;img src=&quot;/styles/images/PC1.jpg&quot; alt=&quot;将各类存储其看作一个逻辑存储器&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 06 Aug 2017 21:03:01 +0800</pubDate>
        <link>http://www.idearfree.com/assembly/language/2017/08/06/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/assembly/language/2017/08/06/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80.html</guid>
        
        <category>Assembly Language</category>
        
        
        <category>Assembly</category>
        
        <category>Language</category>
        
      </item>
    
      <item>
        <title>python基础总结(一)</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;1.变量和简单的数据类型&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;2.列表&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;3.操作列表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;1.变量和简单的数据类型&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;变量
    &lt;ol&gt;
      &lt;li&gt;在程序中可以随时修改变量的值,而python始终记录最新值&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;变量和命名的使用
    &lt;ol&gt;
      &lt;li&gt;变量名只能包含字母,数字和下划线(不能以数字开头)&lt;/li&gt;
      &lt;li&gt;不要将python的关键字和函数名作为变量名&lt;/li&gt;
      &lt;li&gt;书写具有描述性的变量名&lt;/li&gt;
      &lt;li&gt;慎用 I 和 O&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;字符串
    &lt;ol&gt;
      &lt;li&gt;用引号引起来的都为字符串&lt;/li&gt;
      &lt;li&gt;obj.title()将单词首字母大写&lt;/li&gt;
      &lt;li&gt;通过 ‘+’ 来使两个字符串合并&lt;/li&gt;
      &lt;li&gt;obj.upper(),lower()将字符串分别转为大,小写&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;删除空白
    &lt;ol&gt;
      &lt;li&gt;obj.strip(), lstrip(), rstrip()删除两端,左边(left),右边(right)空白&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;python2 中的print语句
 1.print “Hello my friend!” 不用添加括号也行
6.运算符号
 1.python2 中 3/2.0 与 python3中 3/2 相同,结果为1.5
 2.python中支持乘方 3**2 即 3的2次方
7.使用函数str()避免错误类型
 1.可通过str(obj),来将非字符串类型转为字符串类型
8.注释
    &lt;ol&gt;
      &lt;li&gt;’#’pyton注释用井号来标识
9.Python之禅
 1.import this(代码书写原则)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2.列表&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;列表介绍
    &lt;ol&gt;
      &lt;li&gt;python中用’[]’来表示列表(即为动态列表)&lt;/li&gt;
      &lt;li&gt;通过 list[index] 来访问元素(-1为倒数第一个元素)&lt;/li&gt;
      &lt;li&gt;列表中的元素都是字符串&lt;/li&gt;
      &lt;li&gt;list.append(varlue)在列表末尾添加值&lt;/li&gt;
      &lt;li&gt;list.insert(0,varlue)在指定位置添加值&lt;/li&gt;
      &lt;li&gt;del list[index] 删除索引位置的值&lt;/li&gt;
      &lt;li&gt;value = list.pop(index)弹出末尾或任意位置元素&lt;/li&gt;
      &lt;li&gt;list.remove(value)根据值来删除列表中该元素(只能删除一个)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;组织列表
    &lt;ol&gt;
      &lt;li&gt;list.sort()对列表进行永久排序&lt;/li&gt;
      &lt;li&gt;‘reverse=True’ sort的参数(倒序)&lt;/li&gt;
      &lt;li&gt;list.sorted() 对列表进行临时排序&lt;/li&gt;
      &lt;li&gt;len(list) 确认列表长度&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-2&quot;&gt;3.操作列表&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;遍历列表,切片
    &lt;ol&gt;
      &lt;li&gt;for value in list:(通过for循环索引列表值)&lt;/li&gt;
      &lt;li&gt;python中注意缩进&lt;/li&gt;
      &lt;li&gt;for value in range(1,5)生成一系列数字&lt;/li&gt;
      &lt;li&gt;range(5),从0-4(自行理解),range(1,10,2)开始,结束,步距(自行理解)&lt;/li&gt;
      &lt;li&gt;numbers = list(range(1,6))(生成数字列表)&lt;/li&gt;
      &lt;li&gt;list(),生成列表&lt;/li&gt;
      &lt;li&gt;squares = [value**2, for value in range(1, 6)]列表解析&lt;/li&gt;
      &lt;li&gt;[:] 为切片,for value in list[0:3],循环输出列表中下标0-2的元素&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;复制列表
    &lt;ol&gt;
      &lt;li&gt;list1 = list2&lt;a href=&quot;使用切片会复制列表&quot;&gt;:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;list1 = list2 (会创建list1第副本,即list2与1的内存地址相同)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;元组
    &lt;ol&gt;
      &lt;li&gt;元组用’()’(即为静态列表,只能在定义时添加值,不能进行添加删除操作)&lt;/li&gt;
      &lt;li&gt;遍历元组,根列表遍历时相同&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;python小知识
    &lt;ol&gt;
      &lt;li&gt;PEP(Python Enhancement Proposal)代码格式设置指南PEP8元老啊&lt;/li&gt;
      &lt;li&gt;缩进,每级缩进为4个空格&lt;/li&gt;
      &lt;li&gt;行长,每行建议不超过80个字符,注释不超过72个字符&lt;/li&gt;
      &lt;li&gt;更多了解请访问&lt;a href=&quot;https://python.org/dev/peps/pep-0008/&quot;&gt;PEP8格式指南&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 06 Aug 2017 18:13:01 +0800</pubDate>
        <link>http://www.idearfree.com/python/2017/08/06/%E5%AF%B9python%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/python/2017/08/06/%E5%AF%B9python%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>vim YouCompleteMe自动补全的安装配置与使用</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;1 下载&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;2 安装&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;3 配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;1 下载&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone --recursive git://github.com/Valloric/YouCompleteMe&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果执行该命令没报错, 就ok了. 但是中途有可能会断掉, 可以 cd 到 YouCompleteMe, 然后反复用如下命令再次进行下载:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我是网络不好弄了好久才下载完.&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2 安装&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ~/.vim/bundle/YouCompleteMe&lt;/code&gt;到这个目录下&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;./install.py --clang-completer&lt;/code&gt;安装&lt;br /&gt;
到达100%的时候就安装成功了&lt;br /&gt;
[ 95%] Building CXX object ycm/CMakeFiles/ycm_core.dir/Candidate.cpp.o&lt;br /&gt;
[ 96%] Building CXX object ycm/CMakeFiles/ycm_core.dir/IdentifierUtils.cpp.o&lt;br /&gt;
[ 97%] Building CXX object ycm/CMakeFiles/ycm_core.dir/ycm_core.cpp.o&lt;br /&gt;
[ 97%] Building CXX object ycm/CMakeFiles/ycm_core.dir/IdentifierCompleter.cpp.o&lt;br /&gt;
[ 98%] Building CXX object ycm/CMakeFiles/ycm_core.dir/LetterNodeListMap.cpp.o&lt;br /&gt;
[100%] Building CXX object ycm/CMakeFiles/ycm_core.dir/CustomAssert.cpp.o&lt;br /&gt;
[100%] Linking CXX shared library /home/wuyt/mutils/debian_lenny_cfg/vim_cfg/.vim/bundle/YouCompleteMe/third_party/ycmd/ycm_core.so&lt;br /&gt;
[100%] Built target ycm_core&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;3 配置&lt;/h3&gt;

&lt;p&gt;.vimrc中加入:&lt;/p&gt;

&lt;p&gt;” YouCompleteMe&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;set runtimepath+=~/.vim/bundle/YouCompleteMe&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_collect_identifiers_from_tags_files = 1&lt;/code&gt;           “ 开启 YCM 基于标签引擎&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_collect_identifiers_from_comments_and_strings = 1&lt;/code&gt; “ 注释与字符串中的内容也用于补全&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:syntastic_ignore_files=[&quot;.*\.py$&quot;]&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_seed_identifiers_with_syntax = 1&lt;/code&gt;                  “ 语法关键字补全&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_complete_in_comments = 1&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_confirm_extra_conf = 0&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_key_list_select_completion = [&#39;&amp;lt;c-n&amp;gt;&#39;, &#39;&amp;lt;Down&amp;gt;&#39;]&lt;/code&gt;  “ 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_key_list_previous_completion = [&#39;&amp;lt;c-p&amp;gt;&#39;, &#39;&amp;lt;Up&amp;gt;&#39;]&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_complete_in_comments = 1 &lt;/code&gt;                         “ 在注释输入中也能补全&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_complete_in_strings = 1&lt;/code&gt;                           “ 在字符串输入中也能补全&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_collect_identifiers_from_comments_and_strings = 1&lt;/code&gt; “ 注释和字符串中的文字也会被收入补全&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_global_ycm_extra_conf=&#39;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&#39;&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;let g:ycm_show_diagnostics_ui = 0&lt;/code&gt;                           “ 禁用语法检查&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;inoremap &amp;lt;expr&amp;gt; &amp;lt;CR&amp;gt; pumvisible() ? &quot;\&amp;lt;C-y&amp;gt;&quot; : &quot;\&amp;lt;CR&amp;gt;&quot; |&lt;/code&gt;            “ 回车即选中当前项&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;nnoremap &amp;lt;c-j&amp;gt; :YcmCompleter GoToDefinitionElseDeclaration&amp;lt;CR&amp;gt;|&lt;/code&gt;     “ 跳转到定义处&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;let g:ycm_min_num_of_chars_for_completion=2&lt;/code&gt;                 “ 从第2个键入字符就开始罗列匹配项&lt;/p&gt;

&lt;p&gt;其中 ~/.vim/bundle/YouCompleteMe 为下载 YouCompleteMeu 的路径.&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Aug 2017 11:31:00 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2017/08/06/YouCompleteMe%E5%AE%89%E8%A3%85.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2017/08/06/YouCompleteMe%E5%AE%89%E8%A3%85.html</guid>
        
        <category>Linux</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>如何安装五笔</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;安装五笔&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;安装五笔&lt;/h2&gt;

&lt;p&gt;从右边查看自己使用的是什么输入法&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/shurufa.png&quot; alt=&quot;查看&quot; /&gt;
需要点这个图标开查看.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;对于 ibus
安装 ibus-table-wubi
重新启动计算机
如果不出现，在 ibus 设置中手动添加五笔即可&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对于 fcitx
安装 fcitx-table-wubi 或 fcitx-table-wbpy
重新启动计算机
如果不出现，在 fcitx 设置中手动添加五笔即可
如果 locale 为英文，在 fcitx-config-* 手动添加输入法时需要取消勾选 “Only Show Current Language”&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/styles/images/set.png&quot; alt=&quot;set&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Aug 2017 11:31:00 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2017/08/06/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E4%BA%94%E7%AC%94.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2017/08/06/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E4%BA%94%E7%AC%94.html</guid>
        
        <category>Linux</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>按键说明!</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#vim&quot; id=&quot;markdown-toc-vim&quot;&gt;Vim按键说明&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;移动光标的方法&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;删除.复制与粘贴&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;一般模式切换到编辑模式的可用按钮说明&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;一般模式切换到命令模式的可用的按钮说明&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vim-1&quot; id=&quot;markdown-toc-vim-1&quot;&gt;关于vim的配置&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;vim&quot;&gt;Vim按键说明&lt;/h1&gt;
&lt;p&gt;摘抄自&lt;鸟哥的Linux私房菜&gt;&lt;/鸟哥的Linux私房菜&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;移动光标的方法&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;h 向左&lt;/li&gt;
  &lt;li&gt;l 向右&lt;/li&gt;
  &lt;li&gt;j 向下&lt;/li&gt;
  &lt;li&gt;K 向上&lt;/li&gt;
  &lt;li&gt;[Control]+[f] 屏幕向下移动一页相当于[Page Down]&lt;/li&gt;
  &lt;li&gt;[Control]+[b] 屏幕向上移动一页相当于[Page Up]&lt;/li&gt;
  &lt;li&gt;[control]+[d] 屏幕向下移动半页(仅限于有文本的地方)&lt;/li&gt;
  &lt;li&gt;[control]+[u] 屏幕向上移动半页(仅限于有文本的地方)&lt;/li&gt;
  &lt;li&gt;+ 光标移动倒非空格的下一行&lt;/li&gt;
  &lt;li&gt;- 光标移动倒非空格的上一行&lt;/li&gt;
  &lt;li&gt;n&lt;space&gt; 光标向后移动n个字符的距离&lt;/space&gt;&lt;/li&gt;
  &lt;li&gt;0 or [HOME] 移动到本行开始处&lt;/li&gt;
  &lt;li&gt;$ or [END] 移动到本行结尾处&lt;/li&gt;
  &lt;li&gt;H 光标移动到这个屏幕的第一行第一个字符处&lt;/li&gt;
  &lt;li&gt;M 光标移动到这个屏幕的中间行第一个字符处&lt;/li&gt;
  &lt;li&gt;L 光标移动到这个屏幕的最后一行第一个字符处&lt;/li&gt;
  &lt;li&gt;G 移动到这个文件的最后一行&lt;/li&gt;
  &lt;li&gt;gg 移动到这个文件的第一行&lt;/li&gt;
  &lt;li&gt;nG 移动到这个文件的第n行&lt;/li&gt;
  &lt;li&gt;ngg 同上&lt;/li&gt;
  &lt;li&gt;/Hello 向下查找文件中有Hello的字符&lt;/li&gt;
  &lt;li&gt;?Hello 向上查找文件中有Hello的字符&lt;/li&gt;
  &lt;li&gt;n 向下继续查找&lt;/li&gt;
  &lt;li&gt;N 向上继续查找&lt;/li&gt;
  &lt;li&gt;:nohl or :noh 取消查找高亮 nohlsearch&lt;/li&gt;
  &lt;li&gt;:n1/n2s/word1/word2/g  文件的n1行到n2行查找word1并替换为word2&lt;/li&gt;
  &lt;li&gt;:1,$s/word1/word2/g 从第一行倒最后一行查找word1并替换为word2&lt;/li&gt;
  &lt;li&gt;:1,$s/word1/word2/gc 同上,并且会提示用户确认替换&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;删除.复制与粘贴&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;x,X 向前或向后删除一个字符与x == [Del],X == [Backspace] 效果相同&lt;/li&gt;
  &lt;li&gt;nx 向后删除n个字符&lt;/li&gt;
  &lt;li&gt;dd 删除光标所在行,可以通过n,gg,G等选择删除多少行&lt;/li&gt;
  &lt;li&gt;d$ or d0 删除当先行光标所在位置的后面($)或前面(0)的所有字符&lt;/li&gt;
  &lt;li&gt;yy 复制光标所在行&lt;/li&gt;
  &lt;li&gt;ygg or yG 从当前行复制到开始行(gg)或末尾行(G)&lt;/li&gt;
  &lt;li&gt;y$ or y0 复制光标所在位置的后面($)或前面(0)&lt;/li&gt;
  &lt;li&gt;p, P p粘帖到光标下一行,P粘帖在光标上一行&lt;/li&gt;
  &lt;li&gt;J 使光标所在行与下一行合并&lt;/li&gt;
  &lt;li&gt;c 重复删除多个数据, 例如向下删除10行,[10cj]&lt;/li&gt;
  &lt;li&gt;u 复原上一个操作&lt;/li&gt;
  &lt;li&gt;[control]+r 重做上一个操作&lt;/li&gt;
  &lt;li&gt;. 重复上一个操作&lt;/li&gt;
  &lt;li&gt;fn 在当前行查找字符n&lt;/li&gt;
  &lt;li&gt;; 重复上一个查找&lt;/li&gt;
  &lt;li&gt;w 移动到下一个单词处, b 移动到上一个字符处&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;一般模式切换到编辑模式的可用按钮说明&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;i,I 进入插入模式[insert mode];i从光标所在处插入,I从本行开始处插入&lt;/li&gt;
  &lt;li&gt;a,A	同上;a从光标所在处末尾插入,A从光标所在行末尾插入&lt;/li&gt;
  &lt;li&gt;o,O 同上;o在光标所在行的下一行插入,O在光标所在行的上一行开始插入&lt;/li&gt;
  &lt;li&gt;r,R 进入替换模式[Replace mode];r替换光标所在处下一个字符(一次)R(多次)[ESC]停止&lt;/li&gt;
  &lt;li&gt;v,V,[control]+v 子可视,行可视,块可视&lt;/li&gt;
  &lt;li&gt;[Esc] 退出编辑模式,回到一般模式(通常不进行插入或进行操作时使用)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;一般模式切换到命令模式的可用的按钮说明&lt;/h2&gt;

&lt;p&gt;加[]为可选操作, ! 具有强制的意思&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;:w [name] 保存, 以name为文件名保存(当前位置的另存为)&lt;/li&gt;
  &lt;li&gt;:q 退出&lt;/li&gt;
  &lt;li&gt;:q! 强制退出&lt;/li&gt;
  &lt;li&gt;:wq 保存并退出&lt;/li&gt;
  &lt;li&gt;:ZZ 若文件没有更改则退出,如果更改则保存退出&lt;/li&gt;
  &lt;li&gt;:r[name] 在编辑数据时,读入另一个文件的数据,将其内容追加到光标所在行的后面&lt;/li&gt;
  &lt;li&gt;:n1,n2 w[name] 将n1到n2的内容保存为name这个文件&lt;/li&gt;
  &lt;li&gt;:! command 暂时离开&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vim-1&quot;&gt;关于vim的配置&lt;/h2&gt;

&lt;p&gt;在之前我也贴出了我的vim配置,如需使用可以通过对我的配置进行修改使用,或自行从百度或
Google上搜索配置&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Aug 2017 20:48:00 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2017/08/05/Vim-%E6%8C%89%E9%94%AE%E8%AF%B4%E6%98%8E.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2017/08/05/Vim-%E6%8C%89%E9%94%AE%E8%AF%B4%E6%98%8E.html</guid>
        
        <category>Vim</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>创建快捷启动方式</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ubuntu-&quot; id=&quot;markdown-toc-ubuntu-&quot;&gt;Ubuntu 创建快捷启动方式(启动器)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ubuntu-&quot;&gt;Ubuntu 创建快捷启动方式(启动器)&lt;/h2&gt;

&lt;p&gt;*应用于免安装软件
注:可能不是有些版本不适用吧,但大部分应该可以的。&lt;/p&gt;

&lt;p&gt;1)创建快捷方式桌面文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;	sudo vim /usr/share/applications/FileName.desktop
	*注意:FileName随便写,方便起见改为软件名
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2)在上面文件中添加(看下面内容都能顾名思义)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;	[Desktop Entry]
	Encoding=UTF-8
	Name=FileName(可改)
	Comment=FileName(可改)
	Exec=path(必须为你需要添加快捷方式的软件路径)
	Icon=ico(这里加入你快捷方式的图标路径)
	Terminal=false(打开软件时不显示终端,true为显示)
	StartupNotify=true
	Type=Application(可改)
	Categories=Application;(这里决定了启动器在菜单里的位置)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 02 Aug 2017 11:31:00 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2017/08/02/%E5%88%9B%E5%BB%BA%E5%BF%AB%E6%8D%B7%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2017/08/02/%E5%88%9B%E5%BB%BA%E5%BF%AB%E6%8D%B7%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F.html</guid>
        
        <category>Linux</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>小白的vimrc配置!</title>
        <description>
&lt;p&gt;”============================================&lt;br /&gt;
“= Description:适合自己使用的vimrc配置      =&lt;br /&gt;
“= Last Change:2017/7/22                    =&lt;br /&gt;
“= Version: 1.80                            =&lt;br /&gt;
“=                           Creator:赵小白 =&lt;br /&gt;
“============================================&lt;br /&gt;
&lt;br /&gt;
set nocompatible “关闭vi兼容模式&lt;br /&gt;
syntax on “自动语法高亮&lt;br /&gt;
set shortmess=atI   “ 启动的时候不显示那个援助乌干达儿童的提示  &lt;br /&gt;
winpos 5 5          “ 设定窗口位置  &lt;br /&gt;
set lines=40 columns=120   “ 设定窗口大小&lt;br /&gt;
set go=             “ 不要图形按钮  &lt;br /&gt;
set number relativenumber “设置行号&lt;br /&gt;
colorscheme rcg_gui “使用配色&lt;br /&gt;
set cursorline “突出显示行&lt;br /&gt;
set cursorcolumn&lt;br /&gt;
highlight CursorLine   cterm=NONE ctermbg=black ctermfg=green guibg=NONE guifg=NONE&lt;br /&gt;
highlight CursorColumn cterm=NONE ctermbg=black ctermfg=green guibg=NONE guifg=NONE&lt;br /&gt;
&lt;br /&gt;
set showcmd    “ 输入的命令显示出来，看的清楚些&lt;br /&gt;
set confirm “在处理未保存或制度文件的时候，弹出确认&lt;br /&gt;
set ruler “打开状态栏标尺&lt;br /&gt;
set smartindent “为C提供的自动缩进&lt;br /&gt;
set tabstop=4 “设定tab长度为4&lt;br /&gt;
set autochdir “自动切换当前目录为当前文件所在的目录&lt;br /&gt;
set ignorecase “搜索忽略大小写&lt;br /&gt;
set hlsearch “搜索时高亮显示被找到的文本&lt;br /&gt;
set incsearch “搜索逐字符高亮&lt;br /&gt;
set gdefault “行内替换&lt;br /&gt;
“编码设置&lt;br /&gt;
set enc=utf-8&lt;br /&gt;
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936&lt;br /&gt;
“语言设置&lt;br /&gt;
set langmenu=zh_CN.UTF-8&lt;br /&gt;
set helplang=cn&lt;br /&gt;
set showmatch “ 高亮显示匹配的括号&lt;br /&gt;
set matchtime=1 “ 匹配括号高亮的时间（单位是十分之一秒）&lt;br /&gt;
set magic “设置魔术&lt;br /&gt;
set smartindent “开启新行时使用智能缩进&lt;br /&gt;
set foldenable “开始折叠&lt;br /&gt;
set foldmethod=syntax “设置语法折叠&lt;br /&gt;
set foldcolumn=0 “设置折叠区域宽度&lt;br /&gt;
setlocal foldlevel=1 “设置折叠层数&lt;br /&gt;
set foldclose=all “设置为自动折叠&lt;br /&gt;
set fillchars=vert:\ ,stl:\ ,stlnc:\ “ 在被分割的窗口间显示空白，便于阅读&lt;br /&gt;
filetype on “侦测文件类型&lt;br /&gt;
filetype plugin on “ 载入文件类型插件&lt;br /&gt;
filetype indent on “ 为特定文件类型载入相关缩进文件&lt;br /&gt;
set viminfo+=!  “ 保存全局变量&lt;br /&gt;
set iskeyword+=_,$,@,%,#,- “ 带有如下符号的单词不要被换行分割&lt;br /&gt;
set linespace=0 “ 字符间插入的像素行数目&lt;br /&gt;
“set backspace=0 “ 使回格键（backspace）正常处理indent, eol, start等&lt;br /&gt;
“set whichwrap+=&amp;lt;,&amp;gt;,h,l “ 允许backspace和光标键跨越行边界&lt;br /&gt;
&lt;br /&gt;
“ &lt;F5&gt; 运行python程序  &lt;br /&gt;
map &lt;F5&gt; :w&lt;cr&gt;:!python3 %&lt;CR&gt;  &lt;br /&gt;
  &lt;br /&gt;
&quot;使用NTRETREE&lt;br /&gt;
map &lt;C-n&gt; :NERDTreeToggle&lt;CR&gt; &lt;br /&gt;
autocmd vimenter * NERDTree&lt;br /&gt;
autocmd StdinReadPre * let s:std_in=1&lt;br /&gt;
autocmd VimEnter * if argc() == 0 &amp;amp;&amp;amp; !exists(&quot;s:std_in&quot;) | NERDTree | endif                &lt;br /&gt; 
autocmd bufenter * if (winnr(&quot;$&quot;) == 1 &amp;amp;&amp;amp; exists(&quot;b:NERDTreeType&quot;) &amp;amp;&amp;amp; b:NERDTreeType == &quot;pri &lt;br /&gt;   mary&quot;) | q | endif&lt;br /&gt;
let g:NERDTreeDirArrows = 1                                    &lt;br /&gt;                             
let g:NERDTreeDirArrowExpandable = &#39;▸&#39;&lt;br /&gt;
let g:NERDTreeDirArrowCollapsible = &#39;▾&#39;&lt;br /&gt;
&lt;br /&gt;
&quot; YouCompleteMe&lt;br /&gt;
set runtimepath+=~/.vim/bundle/YouCompleteMe&lt;br /&gt;
let g:ycm_collect_identifiers_from_tags_files = 1           &quot; 开启 YCM 基于标签引擎&lt;br /&gt;
let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释与字符串中的内容也用于补全&lt;br /&gt;
let g:syntastic_ignore_files=[&quot;.*\.py$&quot;]&lt;br /&gt;
let g:ycm_seed_identifiers_with_syntax = 1                  &quot; 语法关键字补全&lt;br /&gt;
let g:ycm_complete_in_comments = 1&lt;br /&gt;
let g:ycm_confirm_extra_conf = 0&lt;br /&gt;
let g:ycm_key_list_select_completion = [&#39;&lt;c-n&gt;&#39;, &#39;&lt;Down&gt;&#39;]  &quot; 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.&lt;br /&gt;
let g:ycm_key_list_previous_completion = [&#39;&lt;c-p&gt;&#39;, &#39;&lt;Up&gt;&#39;]&lt;br /&gt;
let g:ycm_complete_in_comments = 1                          &quot; 在注释输入中也能补全&lt;br /&gt;
let g:ycm_complete_in_strings = 1                           &quot; 在字符串输入中也能补全&lt;br /&gt;
let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释和字符串中的文字也会被收入补全&lt;br /&gt;
let g:ycm_global_ycm_extra_conf=&#39;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&#39;&lt;br /&gt;
let g:ycm_show_diagnostics_ui = 0                           &quot; 禁用语法检查&lt;br /&gt;
inoremap &lt;expr&gt; &lt;CR&gt; pumvisible() ? &quot;\&lt;C-y&gt;&quot; : &quot;\&lt;CR&gt;&quot; |            &quot; 回车即选中当前项&lt;br /&gt;
nnoremap &lt;c-j&gt; :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;|     &quot; 跳转到定义处&lt;br /&gt;
let g:ycm_min_num_of_chars_for_completion=2                 &quot; 从第2个键入字符就开始罗列匹配项 &lt;br /&gt;&lt;/CR&gt;&lt;/c-j&gt;&lt;/CR&gt;&lt;/C-y&gt;&lt;/CR&gt;&lt;/expr&gt;&lt;/Up&gt;&lt;/c-p&gt;&lt;/Down&gt;&lt;/c-n&gt;&lt;/CR&gt;&lt;/C-n&gt;&lt;/CR&gt;&lt;/cr&gt;&lt;/F5&gt;&lt;/F5&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
function RunThisScript() &lt;br /&gt;
    let file_name = expand(“%:p”)&lt;br /&gt;
    let file_ext = expand(“%:e”)&lt;br /&gt;
    let file_cmd = ““&lt;br /&gt;
&lt;br /&gt;
    “python 直接调用&lt;br /&gt;
    if file_ext == “py”&lt;br /&gt;
        let file_cmd = ‘/usr/bin/python3’ &lt;br /&gt;
        let file_args = ‘ ‘ . file_name&lt;br /&gt;
    “c 需要提取第一行的编译参数&lt;br /&gt;
    “如，当需要引入第三方库(以mysql为例)时，则在第一行添加: //-lmysqlclient -L/usr/local/mysql/include
    “文件中则可直接　#include &amp;lt;mysql/mysql.h&amp;gt;&lt;br /&gt;
    elseif file_ext == “c” &lt;br /&gt;
        let file_first_line = getline(1)&lt;br /&gt;
        let file_arg = ““&lt;br /&gt;
        if strpart(file_first_line, 0, 2) == ‘//’&lt;br /&gt;
            let file_arg = strpart(file_first_line, 2) “提取参数&lt;br /&gt;
        endif&lt;br /&gt;
        let file_output_file = strpart(file_name, 0, strridx(file_name, ‘.c’)) &lt;br /&gt;
        let file_args = ‘ -o ‘. file_output_file .’ ‘.  file_name . ‘ ‘. file_arg .’ &amp;amp;&amp;amp; ‘.&lt;br /&gt; file_output_file “将参数附加到编译命令之后&lt;br /&gt;
        let file_cmd = ‘/usr/bin/cc’ &lt;br /&gt;
    “php 直接调用&lt;br /&gt;
    elseif file_ext == “php”&lt;br /&gt;
        let file_cmd = “/usr/local/php/bin/php” “php执行路径&lt;br /&gt;
        let file_args = ‘ -f ‘. file_name&lt;br /&gt;
    “perl 直接调用&lt;br /&gt;
    elseif file_ext == “perl” || file_ext == “pl”&lt;br /&gt;
        let file_cmd = “/usr/bin/perl”&lt;br /&gt;
        let file_args = “ “. file_name&lt;br /&gt;
    “erlang 默认调用 main 函数, 可以确保 escript 和 noshell/shell 执行时一致&lt;br /&gt;
    elseif file_ext == “erl”&lt;br /&gt;
        let file_output_file = strpart(expand(“%”), 0, stridx(expand(“%”), “.erl”))&lt;br /&gt;
        let file_cmd = “/usr/bin/erlc” &lt;br /&gt;
        let file_args = file_output_file .”.”. file_ext .” ; /usr/bin/erl -noshell -s “.&lt;br /&gt; file_output_file . “ main  -s init stop”&lt;br /&gt;
    “java 先调用 javac，再调用java&lt;br /&gt;
    elseif file_ext == “java”&lt;br /&gt;
        let file_output_file = strpart(expand(“%”), 0, stridx(expand(“%”), “.java”))&lt;br /&gt;
        let file_cmd = ‘javac’&lt;br /&gt;
        let file_args = file_name .” &amp;amp;&amp;amp; java “. file_output_file&lt;br /&gt;
    else&lt;br /&gt;
        echo “错误: 没有任何编译器匹配此文件类型, 请确认您的文件扩展名!”&lt;br /&gt;
    endif&lt;br /&gt;
    if file_cmd != ““&lt;br /&gt;
        if ! executable(file_cmd)&lt;br /&gt;
            echo file_cmd&lt;br /&gt;
            echo “The executable file to compile “. file_ext . “ type files.”&lt;br /&gt;
        else&lt;br /&gt;
            let cmd = “! “. file_cmd . ‘ ‘ . file_args&lt;br /&gt;
            “echo “执行命令: “. cmd&lt;br /&gt;
            exec cmd &lt;br /&gt;
        endif&lt;br /&gt;
    endif&lt;br /&gt;
endfunction &lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Jul 2017 22:33:01 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2017/07/22/%E5%B0%8F%E7%99%BD%E7%9A%84vimrc%E9%85%8D%E7%BD%AE.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2017/07/22/%E5%B0%8F%E7%99%BD%E7%9A%84vimrc%E9%85%8D%E7%BD%AE.html</guid>
        
        <category>Vim</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>Error:buftype</title>
        <description>
&lt;p&gt;E382:Vannontwite,’buftype’ option is set
解决方法如下:
可用下面的命名查看buftype的设置，当buftype=cofile时，不能保存文件，只有当buftype=null时，才可以保存&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;:verbose set buftype
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;修改buftype的方法： vim切换至ex模式，输入&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;:setlocal buftype=
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果想改回原设置，可以用下面命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;:setlocal buftype=nofile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 20 Jul 2017 21:47:00 +0800</pubDate>
        <link>http://www.idearfree.com/2017/07/20/Error-buftype.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/2017/07/20/Error-buftype.html</guid>
        
        <category>Vim</category>
        
        
      </item>
    
      <item>
        <title>安装pip及Pygame!</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#linuxpip&quot; id=&quot;markdown-toc-linuxpip&quot;&gt;Linux中安装pip&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#linuxpagame&quot; id=&quot;markdown-toc-linuxpagame&quot;&gt;Linux中安装Pagame&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pippygame&quot; id=&quot;markdown-toc-pippygame&quot;&gt;关于pip安装pygame出错的问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dpkg&quot; id=&quot;markdown-toc-dpkg&quot;&gt;关于出现的dpkg的狗血错误&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今天在Ubuntu 17.04上安装pip的时候，给我来了一大串狗血错误，md系统都直接弹出崩溃—_—|||
下面来分享一下我在书上get的安装方法(Python 从入门到实践)&lt;/p&gt;

&lt;h2 id=&quot;linuxpip&quot;&gt;Linux中安装pip&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;如果安装的版本太多请看上一篇Linux中如何更改python版本&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;访问 https://bootstrap.pypa.io/get-pip.py 如果出现对话框，请选择保存文件;
如果get-pip.py的代码出现在浏览器里，复制下来保存在编辑器中命名为get-pip.py&lt;/p&gt;

    &lt;p&gt;如果找不到，就访问https://pip.pypa.io,单击左边面板中的,再单击中间窗口
 的链接get-pip.py&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用以下命令来安装：&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;$ sudo python get-pip.py
&lt;/code&gt;&lt;/pre&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;如果提示错误说没有—H 把上面命令改为sudo —H python get-pip.py
 然后就OK了！输入 pip –version(或pip3 –version)来查看版本信息吧。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;linuxpagame&quot;&gt;Linux中安装Pagame&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Python2 安装方法&lt;/p&gt;

    &lt;p&gt;2.7使用包管理器来安装Pygame&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;下载pagame ：
    &lt;blockquote&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;$ sudo apt-get install python-pagame 
&lt;/code&gt;&lt;/pre&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;查看安装情况 ：
    &lt;blockquote&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;$ python
&amp;gt;&amp;gt;&amp;gt; import pygame
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;如果没有任何输出就说明Python导入了Pygame这样就也Ok了。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;python3 安装方法&lt;/p&gt;

    &lt;p&gt;如果打开终端会话时使用的是命令python3.5,请将python3-dev替换为python3.5-dev):&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;$ sudo apt-get install python3-dev mercurial
$ sudo apt-get install libsdl-image1.2-dev  libportmidi-dev
&lt;/code&gt;&lt;/pre&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;Pygame高级功能&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;$ sudo apt-get install libsdl-mixer1.2-dev libportmidi-dev
$ sudo apt-get install libswscale-dev libsmpeg-dev libavformat-dev libavcodec-dev
$ sudo apt-get install python-numpy
&lt;/code&gt;&lt;/pre&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;接下来安装Pygame(有必要将pip换成pip3):
    &lt;blockquote&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;$ pip install --user hg+http://bitucket.org/pygame/pygame
&lt;/code&gt;&lt;/pre&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;告知你Pygame找到了哪些库后，输出将暂停一段时间。请按回车键，即便有一些库没有找到。
 你将看到一条信息，说明成功安装了Pygame
 如果输入python –vesion 不是系统默认的2.7可能不能用上面的命令-可参考
 &lt;a href=&quot;http://www.cnblogs.com/gongxijun/p/5823595.html&quot;&gt;安装Python时遇到如下问题,解决方案&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;查看安装情况 ：
    &lt;blockquote&gt;
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;$ python3
&amp;gt;&amp;gt;&amp;gt; import pygame
&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;      &lt;/div&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;pippygame&quot;&gt;关于pip安装pygame出错的问题&lt;/h2&gt;

&lt;p&gt;2017-7-16-21:54添加&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;用pip安装时出现了以下错误,我去抓狂啊…..百度上的教程让人抓狂啊，看不懂。。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;zpp@xb:~$ pip install –user hg+http://bitbucket.org/pygame/pygame
Collecting hg+http://bitbucket.org/pygame/pygame
  Cloning hg http://bitbucket.org/pygame/pygame to /tmp/pip-3g6ldpay-build
Traceback (most recent call last):
  File “/usr/bin/hg”, line 39, in &lt;module&gt;
    import mercurial.util
ImportError: No module named ‘mercurial’&lt;/module&gt;&lt;/p&gt;

&lt;p&gt;不过好在pygame模块再github上挂着–高兴啊!!!好在我用过github
进入正题开始解决问题 pip install –user hg+http://bitucket.org/pygame/pygame
他是通过克隆pygame仓库来安装的根据这个方法&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;我们放弃pip改用git&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt; 没有git的可以用以下命令在终端安装
 sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;好，安装之后开始克隆pygame仓库&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;git clone https://github.com/pygame/pygame
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;

    &lt;p&gt;克隆完成后开始进入pygame安装&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;sudo python3 setup.py
&lt;/code&gt;&lt;/pre&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果有什么问题可以在右上角邮件私信我，欢迎一起探讨.&lt;/p&gt;

&lt;h2 id=&quot;dpkg&quot;&gt;关于出现的dpkg的狗血错误&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;以下内容转自&lt;a href=&quot;http://blog.csdn.net/u010426270/article/details/52028620&quot;&gt;郑斌的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我的ubuntu是16.04版本，今天安装软件(sudo apt-get install ssh)突然安装不上，有如下提示：&lt;/p&gt;

&lt;p&gt;/××××××××××××××××××××××××××&lt;/p&gt;

&lt;p&gt;dpkg: 处理软件包 gir1.2-unity-5.0:amd64 (–configure)时出错：&lt;/p&gt;

&lt;p&gt;该软件包正处于非常不稳定的状态；&lt;/p&gt;

&lt;p&gt;您最好在配置它之前，先重新安装它&lt;/p&gt;

&lt;p&gt;正在设置 ssh (1:7.2p2-4ubuntu1) …&lt;/p&gt;

&lt;p&gt;在处理时有错误发生：&lt;/p&gt;

&lt;p&gt;gir1.2-unity-5.0:amd64&lt;/p&gt;

&lt;p&gt;E: Sub-process /usr/bin/dpkg returned an error code (1)&lt;/p&gt;

&lt;p&gt;××××××××××××××××××××××××××××/&lt;/p&gt;

&lt;p&gt;解决办法如下：&lt;/p&gt;

&lt;p&gt;1.将info文件夹更名&lt;/p&gt;

&lt;p&gt;[plain] view plain copy&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2再新建一个新的info文件夹&lt;/p&gt;

&lt;p&gt;[plain] view plain copy&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;sudo mkdir /var/lib/dpkg/info  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3.更新
[plain] view plain copy&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;sudo apt-get update  
&amp;lt;pre name=&quot;code&quot; class=&quot;plain&quot;&amp;gt;sudo apt-get -f install  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;4.执行完上一步操作后会在新的info文件夹下生成一些文件，现将这些文件全部移到info_old文件夹下&lt;/p&gt;

&lt;p&gt;[html] view plain copy&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;5.把自己新建的info文件夹删掉&lt;/p&gt;

&lt;p&gt;[plain] view plain copy&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;sudo rm -rf /var/lib/dpkg/info  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;6.把以前的info文件夹重新改回名字&lt;/p&gt;

&lt;p&gt;[plain] view plain copy&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;codehilite&quot;&gt;&lt;code&gt;sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;问题解决。&lt;/p&gt;

</description>
        <pubDate>Sun, 16 Jul 2017 18:13:01 +0800</pubDate>
        <link>http://www.idearfree.com/python/2017/07/16/%E5%AE%89%E8%A3%85pip.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/python/2017/07/16/%E5%AE%89%E8%A3%85pip.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>VIM分屏!</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#vim&quot; id=&quot;markdown-toc-vim&quot;&gt;分屏启动Vim&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;关闭分屏&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;分屏&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;移动光标&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;移动分屏&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;屏幕尺寸&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一直觉得vim分屏好酷，可惜我不会，今天在网上查了查，一实践还真不赖，拿出来分享了。&lt;br /&gt;
&lt;br /&gt;
:new 新建分屏&lt;br /&gt;
:spilt 水平分屏&lt;br /&gt;
:vsplit 垂直分屏&lt;br /&gt;
:only 取消分屏&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1.Ctrl+W，然后马上来个n 水平分屏&lt;br /&gt;
   Ctrl+w，再一个c，是关闭当前的窗口&lt;br /&gt;
2.如何split horizontally?&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ctrl + w, s 水平&lt;/p&gt;

&lt;p&gt;split vertically&lt;/p&gt;

&lt;p&gt;Ctrl + w, v 垂直&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;3.如何切换焦点？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ctrl + w, w 后一个
Ctrl + w, p 前一个&lt;/p&gt;

&lt;p&gt;Ctrl + w, h 四个方向
Ctrl + w, i
Ctrl + w, k
Ctrl + w, l&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;4.如何关闭其他窗口?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ctrl + w, o&lt;/p&gt;

&lt;p&gt;更多快捷键，可直接查询
:help ctrl-w&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;5.载入文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;:vs  文件路径/文件名      在新的垂直分屏中打开文件&lt;/p&gt;

&lt;p&gt;:sv  文件路径/文件名      在新的水平分屏中打开文件&lt;/p&gt;

&lt;p&gt;作为vim fans，soone早就把vim作为编程的首选编辑器来，什么庞大到ide，都不要，就一个简简单单的vim，看似简单，其实很不简单。通过适当到配 置，可以将他配置得完全不差于其他编程ide。vim具体怎么配置这里就不说了，本来想翻译下下面这篇牛X的vim配置，无奈一看确实是太长了，还是等有 空咱再好好的来翻译。现在先给贴贴出转载的地址，有兴趣的去看看，真不错。&lt;/p&gt;

&lt;h2 id=&quot;vim&quot;&gt;分屏启动Vim&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;使用大写的O参数来垂直分屏。&lt;/p&gt;

    &lt;p&gt;vim -On file1 file2 …&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用小写的o参数来水平分屏。&lt;/p&gt;

    &lt;p&gt;vim -on file1 file2 …&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注释: n是数字，表示分成几个屏。&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;关闭分屏&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;关闭当前窗口。&lt;/p&gt;

    &lt;p&gt;Ctrl+W c&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;关闭当前窗口，如果只剩最后一个了，则退出Vim。&lt;/p&gt;

    &lt;p&gt;Ctrl+W q&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;分屏&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;上下分割当前打开的文件。&lt;/p&gt;

    &lt;p&gt;Ctrl+W s&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;上下分割，并打开一个新的文件。&lt;/p&gt;

    &lt;p&gt;:sp filename&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;左右分割当前打开的文件。&lt;/p&gt;

    &lt;p&gt;Ctrl+W v&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;左右分割，并打开一个新的文件。&lt;/p&gt;

    &lt;p&gt;:vsp filename&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;移动光标&lt;/h2&gt;

&lt;p&gt;Vi中的光标键是h, j, k, l，要在各个屏间切换，只需要先按一下Ctrl+W&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;把光标移到右边 的屏。&lt;/p&gt;

    &lt;p&gt;Ctrl+W l&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;把光标移到左边 的屏中。&lt;/p&gt;

    &lt;p&gt;Ctrl+W h&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;把光标移到上边 的屏中。&lt;/p&gt;

    &lt;p&gt;Ctrl+W k&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;把光标移到下边 的屏中。&lt;/p&gt;

    &lt;p&gt;Ctrl+W j&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;把光标移到下一个 的屏中。.&lt;/p&gt;

    &lt;p&gt;Ctrl+W w&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-3&quot;&gt;移动分屏&lt;/h2&gt;

&lt;p&gt;这个功能还是使用了Vim的光标键，只不过都是大写。当然了，如果你的分屏很乱很复杂的话，这个功能可能会出现一些非常奇怪的症状。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;向右移动。&lt;/p&gt;

    &lt;p&gt;Ctrl+W L&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;向左移动&lt;/p&gt;

    &lt;p&gt;Ctrl+W H&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;向上移动&lt;/p&gt;

    &lt;p&gt;Ctrl+W K&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;向下移动&lt;/p&gt;

    &lt;p&gt;Ctrl+W J&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-4&quot;&gt;屏幕尺寸&lt;/h2&gt;

&lt;p&gt;下面是改变尺寸的一些操作，主要是高度，对于宽度你可以使用Ctrl+W &lt;或是&gt;，但这可能需要最新的版本才支持。&lt;/或是&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;让所有的屏都有一样的高度。&lt;/p&gt;

    &lt;p&gt;Ctrl+W =&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;增加高度。&lt;/p&gt;

    &lt;p&gt;Ctrl+W +&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;减少高度。&lt;/p&gt;

    &lt;p&gt;Ctrl+W -&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 16 Jul 2017 17:13:01 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2017/07/16/Vim-%E5%88%86%E5%B1%8F%E7%AE%A1%E7%90%86.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2017/07/16/Vim-%E5%88%86%E5%B1%8F%E7%AE%A1%E7%90%86.html</guid>
        
        <category>Vim</category>
        
        
        <category>Linux</category>
        
      </item>
    
  </channel>
</rss>
