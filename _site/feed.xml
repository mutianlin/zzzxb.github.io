<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>远方有多远,请你告诉我!</description>
    <link>http://www.idearfree.com/</link>
    <atom:link href="http://www.idearfree.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 05 Nov 2017 14:43:48 +0800</pubDate>
    <lastBuildDate>Sun, 05 Nov 2017 14:43:48 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>MySQL的sql文件导出/入!</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;一.导出数据&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;二.导入数据库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;一.导出数据&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;导出数据和表结构&lt;br /&gt;
&lt;code&gt;mysqldump -uUserName -p DBName &amp;gt; DBName.sql&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;只导出表结构&lt;br /&gt;
&lt;code&gt;mysqldump -uUeerName -p -d DBName	&amp;gt; DBName.sql&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;section-1&quot;&gt;二.导入数据库&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;首先建立空数据库&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;mysql&amp;gt;create database DBname&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一.方法一&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;导入数据库
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;选择数据库&lt;/p&gt;

        &lt;p&gt;&lt;code&gt;mysql&amp;gt;use DBname;&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;设置数据库编码&lt;/p&gt;

        &lt;p&gt;&lt;code&gt;mysel&amp;gt;set names utf8;&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;导入数据库(注意sql文件路径)&lt;/p&gt;

        &lt;p&gt;&lt;code&gt;mysql&amp;gt;source /home/abc/abc.sql;&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;二.方法二&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;mysql -uUserName -p DBName &amp;lt; DBName.sql&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;例:#  mysql -uUserName -p abc &amp;lt;abc.sql&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&quot;color:red;&quot;&gt;*建议使用第二种方法导入&lt;/div&gt;
</description>
        <pubDate>Sun, 05 Nov 2017 14:08:01 +0800</pubDate>
        <link>http://www.idearfree.com/mysql/2017/11/05/MySQL%E7%9A%84%E5%AF%BC%E5%87%BA.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/mysql/2017/11/05/MySQL%E7%9A%84%E5%AF%BC%E5%87%BA.html</guid>
        
        <category>MySQL</category>
        
        
        <category>MySQL</category>
        
      </item>
    
      <item>
        <title>MySQL的启动与终止!</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ubuntu&quot; id=&quot;markdown-toc-ubuntu&quot;&gt;一.Ubuntu下的启动与终止&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#windows&quot; id=&quot;markdown-toc-windows&quot;&gt;二.Windows下的启动与终止方式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ubuntu&quot;&gt;一.Ubuntu下的启动与终止&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;service mysql start&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;service mysql stop&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;windows&quot;&gt;二.Windows下的启动与终止方式&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;net start mysql&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;net stop mysql&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 Nov 2017 20:08:01 +0800</pubDate>
        <link>http://www.idearfree.com/mysql/2017/11/04/MySQL%E7%9A%84%E5%90%AF%E5%8A%A8%E5%92%8C%E7%BB%93%E6%9D%9F.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/mysql/2017/11/04/MySQL%E7%9A%84%E5%90%AF%E5%8A%A8%E5%92%8C%E7%BB%93%E6%9D%9F.html</guid>
        
        <category>MySQL</category>
        
        
        <category>MySQL</category>
        
      </item>
    
      <item>
        <title>GitHub博客上传</title>
        <description>
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;由于总是忘记怎么把电脑里的文件上传到博客仓库写的.把它记下来防止忘记;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;jekyll server&lt;/code&gt;查看本地博客效果&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git status&lt;/code&gt;擦看本地自己修改了多少文件&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git add .&lt;/code&gt;添加远程不存才的git文件&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git commit -m &quot;maste&quot;&lt;/code&gt;提交修改&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git pull&lt;/code&gt;从另一个存储库或本地分支获取并集成(整合)&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git push&lt;/code&gt;跟进到远程服务器上&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git rm&lt;/code&gt;移除文件&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 04 Nov 2017 19:30:01 +0800</pubDate>
        <link>http://www.idearfree.com/helloblog/2017/11/04/GitHub%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/helloblog/2017/11/04/GitHub%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BC%A0.html</guid>
        
        <category>HelloBlog</category>
        
        
        <category>HelloBlog</category>
        
      </item>
    
      <item>
        <title>Ubuntu图形界面卡死</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ubuntu&quot; id=&quot;markdown-toc-ubuntu&quot;&gt;Ubuntu图形界面卡死&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ubuntu&quot;&gt;Ubuntu图形界面卡死&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Control + shift + 1,2,3,4,5,6进入字符界面&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;ps用于查看系统进程&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;kill用于向进程发送强行终止信号&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;查看tty7图形界面进程id&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code&gt;ps -t tty7&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;用Kill来杀死进程&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code&gt;kill pid&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 04 Nov 2017 19:18:00 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2017/11/04/%E7%B3%BB%E7%BB%9F%E5%8D%A1%E6%AD%BB.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2017/11/04/%E7%B3%BB%E7%BB%9F%E5%8D%A1%E6%AD%BB.html</guid>
        
        <category>Linux</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>JDBC连接数据库</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#jdbc&quot; id=&quot;markdown-toc-jdbc&quot;&gt;1.加载JDBC驱动程序&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jdbcurl&quot; id=&quot;markdown-toc-jdbcurl&quot;&gt;2.提供JDBC连接的URL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;3、创建数据库的连接&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#statement&quot; id=&quot;markdown-toc-statement&quot;&gt;4、创建一个Statement&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sql&quot; id=&quot;markdown-toc-sql&quot;&gt;5、执行SQL语句&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;6、处理结果&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jdbc-1&quot; id=&quot;markdown-toc-jdbc-1&quot;&gt;7、关闭JDBC对象&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jdbc&quot;&gt;1.加载JDBC驱动程序&lt;/h3&gt;
&lt;p&gt;在连接数据库之前，首先要加载想要连接的数据库的驱动到JVM（Java虚拟机）， 这通过java.lang.Class类的静态方法forName(String className)实现。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;例如：&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;try{&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;//加载MySql的驱动类&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Class.forName(“com.mysql.jdbc.Driver”) ;&lt;br /&gt;
}catch(ClassNotFoundException e){&lt;br /&gt;
System.out.println(“找不到驱动程序类，加载驱动失败！”);&lt;br /&gt;
e.printStackTrace() ;&lt;br /&gt;
}&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;成功加载后，会将Driver类的实例注册到DriverManager类中;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;jdbcurl&quot;&gt;2.提供JDBC连接的URL&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;连接URL定义了连接数据库时的协议、子协议、数据源标识。&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;书写形式：协议：子协议：数据源标识&lt;br /&gt;
协议：在JDBC中总是以jdbc开始&lt;br /&gt;
子协议：是桥连接的驱动程序或是数据库管理系统名称。&lt;br /&gt;
数据源标识：标记找到数据库来源的地址与连接端口。&lt;br /&gt;
例如：（MySql的连接URL）&lt;br /&gt;
jdbc:mysql:&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;//localhost:3306/test?useUnicode=true&amp;amp;characterEncoding=gbk ;&lt;br /&gt;
useUnicode=true：表示使用Unicode字符集。如果characterEncoding设置为&lt;br /&gt;
gb2312或GBK，本参数必须设置为true 。characterEncoding=gbk：字符编码方式。&lt;br /&gt;
或者:
//”jdbc:mysql://localhost:3306/数据库名称?user=root&amp;amp;password=happy&amp;amp;useSSL=false”; &lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;section&quot;&gt;3、创建数据库的连接&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;要连接数据库，需要向java.sql.DriverManager请求并获得Connection对象， 该对象就代表一个数据库的连接。&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;使用DriverManager的getConnectin(String url,String username,String password )方法传入指定的欲连接的数据库的路径、数据库的用户名和 密码来获得。&lt;br /&gt;
例如：&lt;br /&gt;
try{&lt;br /&gt;
Connection con =DriverManager.getConnection(url , username , password ) ;&lt;br /&gt;
}catch(SQLException se){&lt;br /&gt;
System.out.println(“数据库连接失败！”);&lt;br /&gt;
se.printStackTrace() ;&lt;br /&gt;
}&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;statement&quot;&gt;4、创建一个Statement&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;要执行SQL语句，必须获得java.sql.Statement实例，Statement实例分为以下3 种类型：&lt;br /&gt;
1、执行静态SQL语句。通常通过Statement实例实现。&lt;br /&gt;
2、执行动态SQL语句。通常通过PreparedStatement实例实现。&lt;br /&gt;
3、执行数据库存储过程。通常通过CallableStatement实例实现。&lt;br /&gt;
具体的实现方式：&lt;br /&gt;
Statement stmt = con.createStatement() ;&lt;br /&gt;
PreparedStatementpstmt = con.prepareStatement(sql) ;&lt;br /&gt;
CallableStatementcstmt =con.prepareCall(“{CALL demoSp(? , ?)}”) ;&lt;br /&gt;
———————————————————————&lt;br /&gt;
//String sql=”insert student(id,name,sex) VALUES(?,?,?);”;&lt;br /&gt;
//ps = con.prepareStatement(sql);&lt;br /&gt;
//ps.setInt(1,id);&lt;br /&gt;
//ps.setString(2,name);&lt;br /&gt;
//ps.setString(3,sex);&lt;br /&gt;
//ps.executeUpdate();&lt;br /&gt;
或:&lt;br /&gt;
//st = con.createStatement();&lt;br /&gt;
//int num = st.executeUpdate(sql);&lt;br /&gt;
又或者:&lt;br /&gt;
//ss = st.executeQuery(sql1);//返回结果集&lt;br /&gt;
//while(ss.next()){&lt;br /&gt;
//System.out.println(&lt;br /&gt;
//ss.getInt(1)+”\t”+ss.getString(2)+”\t” + ss.getString(3));&lt;br /&gt;
//}&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sql&quot;&gt;5、执行SQL语句&lt;/h3&gt;
&lt;p&gt;Statement接口提供了三种执行SQL语句的方法：executeQuery、executeUpdate 和execute&lt;br /&gt;
1、ResultSetexecuteQuery(String sqlString)：执行查询数据库的SQL语句 ，返回一个结果集（ResultSet）对象。&lt;br /&gt;
2、intexecuteUpdate(String sqlString)：用于执行INSERT、UPDATE或&lt;br /&gt;
DELETE语句以及SQL DDL语句，如：CREATE TABLE和DROP TABLE等&lt;br /&gt;
3、execute(sqlString):用于执行返回多个结果集、多个更新计数或二者组合的 语句。&lt;br /&gt;
具体实现的代码：&lt;br /&gt;
ResultSetrs = stmt.executeQuery(“SELECT * FROM …”) ;&lt;br /&gt;
int rows = stmt.executeUpdate(“INSERT INTO …”) ;&lt;br /&gt;
boolean flag = stmt.execute(String sql) ;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;6、处理结果&lt;/h3&gt;
&lt;p&gt;两种情况：
1、执行更新返回的是本次操作影响到的记录数。&lt;br /&gt;
2、执行查询返回的结果是一个ResultSet对象。&lt;br /&gt;
•ResultSet包含符合SQL语句中条件的所有行，并且它通过一套get方法提供了对这些 行中数据的访问。&lt;br /&gt;
•使用结果集（ResultSet）对象的访问方法获取数据：&lt;br /&gt;
while(rs.next()){&lt;br /&gt;
String name = rs.getString(“name”) ;&lt;br /&gt;
String pass = rs.getString(1) ; // 此方法比较高效&lt;br /&gt;
}&lt;br /&gt;
（列是从左到右编号的，并且从列1开始）&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;jdbc-1&quot;&gt;7、关闭JDBC对象&lt;/h3&gt;

&lt;p&gt;操作完成以后要把所有使用的JDBC对象全都关闭，以释放JDBC资源，关闭顺序和声 明顺序相反：&lt;br /&gt;
1、关闭记录集&lt;br /&gt;
2、关闭声明&lt;br /&gt;
3、关闭连接对象&lt;br /&gt;
if(rs != null){ // 关闭记录集&lt;br /&gt;
try{&lt;br /&gt;
rs.close() ;&lt;br /&gt;
}catch(SQLException e){ e.printStackTrace() ; }&lt;br /&gt;
}&lt;br /&gt;
if(stmt != null){ // 关闭声明 try{&lt;br /&gt;
stmt.close() ;
}catch(SQLException e){ e.printStackTrace() ; }&lt;br /&gt;
}&lt;br /&gt;
if(conn != null){ // 关闭连接对象 try{&lt;br /&gt;
conn.close() ;&lt;br /&gt;
}catch(SQLException e){ e.printStackTrace() ; }&lt;br /&gt;
}&lt;br /&gt;
&lt;a href=&quot;http://blog.csdn.net/javaniuniu/article/details/52403509&quot;&gt;原文连接&lt;/a&gt;
为了方便学习而转载的如有不妥请作者联系我,我会尽快删除.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Oct 2017 15:03:01 +0800</pubDate>
        <link>http://www.idearfree.com/java/2017/10/18/Java%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/java/2017/10/18/Java%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93.html</guid>
        
        <category>Java</category>
        
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>CSS三种引用方式</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#css&quot; id=&quot;markdown-toc-css&quot;&gt;css的四种引入方式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;1.行内样式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;2.内嵌样式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;3.链接样式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;4.导入样式（不建议使用）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#css-1&quot; id=&quot;markdown-toc-css-1&quot;&gt;第二：四种CSS引入方式的优先级&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;css&quot;&gt;css的四种引入方式&lt;/h3&gt;

&lt;h3 id=&quot;section&quot;&gt;1.行内样式&lt;/h3&gt;

&lt;p&gt;最直接最简单的一种，直接对HTML标签使用style=”“，例如：&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;p style=”color:#F00; “&amp;gt;&amp;lt;/p&amp;gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;缺点：HTML页面不纯净，文件体积大，不利于蜘蛛爬行，后期维护不方便。&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2.内嵌样式&lt;/h3&gt;

&lt;p&gt;内嵌样式就是将CSS代码写在&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;之间，并且用&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;进行声明，例如：&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;style type=”text/css”&amp;gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;body,div,a,img,p{margin:0; padding:0;}&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;/style&amp;gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;优缺点：页面使用公共CSS代码，也是每个页面都要定义的，如果一个网站有很多页面，每个文件都会变大，后期维护难度也大，如果文件很少，CSS代码也不多，这种样式还是很不错的。&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;3.链接样式&lt;/h3&gt;

&lt;p&gt;链接样式是使用频率最高，最实用的样式，只需要在&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;之间加上&amp;lt;link…/&amp;gt;就可以了，如下：&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;link type=”text/css” rel=”stylesheet” href=”style.css” /&amp;gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;优缺点：实现了页面框架代码与表现CSS代码的完全分离，使得前期制作和后期维护都十分方便&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;4.导入样式（不建议使用）&lt;/h3&gt;

&lt;p&gt;导入样式和链接样式比较相似，采用@import样式导入CSS样式表，在HTML初始化时，会被导入到HTML或者CSS文件中，成为文件的一部分，类似第二种内嵌样式。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;@import在html中使用，如下：&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;style type=”text/css”&amp;gt;&lt;br /&gt;
@import url(style.css);&lt;br /&gt;
&amp;lt;/style&amp;gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;@import在CSS中使用，如下：&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;@import url(style.css);&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;css-1&quot;&gt;第二：四种CSS引入方式的优先级&lt;/h3&gt;

&lt;p&gt;1.就近原则&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;2.理论上：行内&amp;gt;内嵌&amp;gt;链接&amp;gt;导入&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;3.实际上：内嵌、链接、导入在同一个文件头部，谁离相应的代码近，谁的优先级高&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/sweetyu/p/4954316.html&quot;&gt;原文地址&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 18 Oct 2017 14:03:01 +0800</pubDate>
        <link>http://www.idearfree.com/web/2017/10/18/CSS%E7%9A%84%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/web/2017/10/18/CSS%E7%9A%84%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F.html</guid>
        
        <category>CSS</category>
        
        
        <category>WEB</category>
        
      </item>
    
      <item>
        <title>JavaScript三种引用方式</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;1.事件定义(行内)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;2.直接嵌入式(内部)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;3.文件调用(外部)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section&quot;&gt;1.事件定义(行内)&lt;/h3&gt;

&lt;p&gt;&amp;lt;onclick=”JS代码”&amp;gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2.直接嵌入式(内部)&lt;/h3&gt;

&lt;p&gt;&amp;lt;script type=”text/javascript”&amp;gt;&lt;br /&gt;
 JS代码&lt;br /&gt;
&amp;lt;/script&amp;gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;3.文件调用(外部)&lt;/h3&gt;

&lt;p&gt;&amp;lt;script type=”text/javascript” src=”js文件地址”&amp;gt;&lt;br /&gt;
&amp;lt;/script&amp;gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 18 Oct 2017 13:03:01 +0800</pubDate>
        <link>http://www.idearfree.com/web/2017/10/18/js%E4%B8%89%E7%A7%8D%E5%BC%95%E7%94%A8%E6%96%B9%E5%BC%8F.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/web/2017/10/18/js%E4%B8%89%E7%A7%8D%E5%BC%95%E7%94%A8%E6%96%B9%E5%BC%8F.html</guid>
        
        <category>JavaScript</category>
        
        
        <category>WEB</category>
        
      </item>
    
      <item>
        <title>python基础总结</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#if&quot; id=&quot;markdown-toc-if&quot;&gt;if语句&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;if&quot;&gt;if语句&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if 2 &amp;lt; 3:&lt;/code&gt; 
&lt;code class=&quot;highlighter-rouge&quot;&gt;elif 2 &amp;gt; 3:&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;else:&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 09 Aug 2017 18:13:01 +0800</pubDate>
        <link>http://www.idearfree.com/python/2017/08/09/python.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/python/2017/08/09/python.html</guid>
        
        <category>python</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>处理异常!</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#trycatch&quot; id=&quot;markdown-toc-trycatch&quot;&gt;try…catch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#throws&quot; id=&quot;markdown-toc-throws&quot;&gt;throws&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#finally&quot; id=&quot;markdown-toc-finally&quot;&gt;finally&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;trycatch&quot;&gt;try…catch&lt;/h3&gt;
&lt;p&gt;普通异常处理&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;try{&lt;/code&gt;&lt;br /&gt;
    &lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.print(3/0);&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;catch(Exception e){&lt;/code&gt; &lt;br /&gt;
    &lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.print(&quot;除数不能为零&quot;);&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;throws&quot;&gt;throws&lt;/h3&gt;
&lt;p&gt;严重或无法预料异常时使用抛异常&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;try{&lt;/code&gt;&lt;br /&gt;
    &lt;code class=&quot;highlighter-rouge&quot;&gt;function();&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;catch(Exception e){&lt;/code&gt; &lt;br /&gt;
    &lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.print(&quot;除数不能为零&quot;);&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;void function() throws Exception{&lt;/code&gt;&lt;br /&gt;
    &lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.print(3/0);&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;finally&quot;&gt;finally&lt;/h3&gt;
&lt;p&gt;放在try…catch后面,无论是否出现异常都会执行,控制程序走向.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;try{&lt;/code&gt;&lt;br /&gt;
    &lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.print(3/0);&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;catch(Exception e){&lt;/code&gt; &lt;br /&gt;
    &lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.print(&quot;除数不能为零&quot;);&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;finally{&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;System.out.println(&quot;程序执行完毕&quot;);&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 07 Aug 2017 13:03:01 +0800</pubDate>
        <link>http://www.idearfree.com/java/2017/08/07/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/java/2017/08/07/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html</guid>
        
        <category>Java</category>
        
        
        <category>Java</category>
        
      </item>
    
      <item>
        <title>为FireFox安装Flash</title>
        <description>
&lt;ol&gt;
  &lt;li&gt;查看/usr/lib目录下是否有mozilla目录(没有了就创建)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo mkdir -p /usr/lib/mozilla/plugins&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;把下载的的flash.gar.gz的找个地方解压一下
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tar -zxvf flash_player_npapi_linux.x86_64.tar.gz&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;把解压后的libflashplayer.so复制到刚才创建的目录下
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo cp ./libflashplayer /usr/lib/mozilla/plugins&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;然后查看FireFox的附加插件-插件中就会多出一个Shockwave Flash.
后边调成永久启用就行了&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Aug 2017 11:18:00 +0800</pubDate>
        <link>http://www.idearfree.com/linux/2017/08/07/%E4%B8%BAFireFox%E5%AE%89%E8%A3%85Flash.html</link>
        <guid isPermaLink="true">http://www.idearfree.com/linux/2017/08/07/%E4%B8%BAFireFox%E5%AE%89%E8%A3%85Flash.html</guid>
        
        <category>Linux</category>
        
        
        <category>Linux</category>
        
      </item>
    
  </channel>
</rss>
